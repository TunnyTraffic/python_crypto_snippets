# a bit like hashcat masks without the ballache of hashcat masks
# partial known password guessing against a known md5 hash, this one had a /n char at the end of the original password
# as a result of using echo %password | md5sum instead of echo -n %password

import hashlib
import itertools
import string

init = 'pent'
newlinechar = 0x0a

candidate = ''
candidatehash = ''
targethash = "46c5a573e4ec7258b41fb748cef576f0"
attempts = 0
chars = string.ascii_lowercase + string.digits	

for guess in itertools.product(chars, repeat=5):
	attempts += 1
	candidate = ''.join(guess)
	test = 'pent' + candidate + '\n'
	m = hashlib.md5()
	m.update(test)
	print(test, attempts, m.hexdigest())
	if m.hexdigest() == targethash:
		print(test + ', ' + m.hexdigest() + ', ' + targethash)
		break
